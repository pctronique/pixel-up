security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        users_in_memory: { memory: null }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: users_in_memory
            custom_authenticator: App\Security\UserAuthenticator
            logout:
                path: app_logout
                # Où rediriger après la déconnexion
                # target: app_any_route

            # Activer différentes façons de s'authentifier
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

     # Un moyen simple de contrôler l'accès à de grandes sections de votre site
    # Remarque : Seul le *premier* contrôle d'accès qui correspond sera utilisé
    access_control:
            - { path: ^/admin, roles: ROLE_ADMIN }
            - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:

            # Par défaut, les hacheurs de mot de passe sont gourmands en ressources et prennent du temps. C'est
            # important pour générer des hachages de mots de passe sécurisés. Dans les tests cependant, les hachages sécurisés
            # ne sont pas importants, gaspillent des ressources et augmentent les temps de test. Ce qui suit
            # réduit le facteur de travail aux valeurs les plus basses possibles.

            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # La valeur la plus basse possible pour bcrypt
                time_cost: 3 # La valeur la plus basse possible pour argon
                memory_cost: 10 # La valeur la plus basse possible pour argon
